package koordinator;


/**
* koordinator/ggT_ProzessPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Koordinator.idl
* Dienstag, 22. April 2014 11:28 Uhr MESZ
*/

public abstract class ggT_ProzessPOA extends org.omg.PortableServer.Servant
 implements koordinator.ggT_ProzessOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("startBerechnung", new java.lang.Integer (0));
    _methods.put ("setLinkerNachbar", new java.lang.Integer (1));
    _methods.put ("setRechterNachbar", new java.lang.Integer (2));
    _methods.put ("getLinkerNachbar", new java.lang.Integer (3));
    _methods.put ("getRechterNachbar", new java.lang.Integer (4));
    _methods.put ("sendBroadcast", new java.lang.Integer (5));
    _methods.put ("addRechterChannel", new java.lang.Integer (6));
    _methods.put ("addLinkerChannel", new java.lang.Integer (7));
    _methods.put ("set_ggT", new java.lang.Integer (8));
    _methods.put ("setMonitor", new java.lang.Integer (9));
    _methods.put ("exit", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // koordinator/ggT_Prozess/startBerechnung
       {
         this.startBerechnung ();
         out = $rh.createReply();
         break;
       }

       case 1:  // koordinator/ggT_Prozess/setLinkerNachbar
       {
         koordinator.ggT_Prozess linker_nachbar = koordinator.ggT_ProzessHelper.read (in);
         this.setLinkerNachbar (linker_nachbar);
         out = $rh.createReply();
         break;
       }

       case 2:  // koordinator/ggT_Prozess/setRechterNachbar
       {
         koordinator.ggT_Prozess rechter_nachbar = koordinator.ggT_ProzessHelper.read (in);
         this.setRechterNachbar (rechter_nachbar);
         out = $rh.createReply();
         break;
       }

       case 3:  // koordinator/ggT_Prozess/getLinkerNachbar
       {
         koordinator.ggT_Prozess $result = null;
         $result = this.getLinkerNachbar ();
         out = $rh.createReply();
         koordinator.ggT_ProzessHelper.write (out, $result);
         break;
       }

       case 4:  // koordinator/ggT_Prozess/getRechterNachbar
       {
         koordinator.ggT_Prozess $result = null;
         $result = this.getRechterNachbar ();
         out = $rh.createReply();
         koordinator.ggT_ProzessHelper.write (out, $result);
         break;
       }

       case 5:  // koordinator/ggT_Prozess/sendBroadcast
       {
         koordinator.Nachricht msg = koordinator.NachrichtHelper.read (in);
         this.sendBroadcast (msg);
         out = $rh.createReply();
         break;
       }

       case 6:  // koordinator/ggT_Prozess/addRechterChannel
       {
         koordinator.Nachricht msg = koordinator.NachrichtHelper.read (in);
         this.addRechterChannel (msg);
         out = $rh.createReply();
         break;
       }

       case 7:  // koordinator/ggT_Prozess/addLinkerChannel
       {
         koordinator.Nachricht msg = koordinator.NachrichtHelper.read (in);
         this.addLinkerChannel (msg);
         out = $rh.createReply();
         break;
       }

       case 8:  // koordinator/ggT_Prozess/set_ggT
       {
         int ggt = in.read_long ();
         this.set_ggT (ggt);
         out = $rh.createReply();
         break;
       }

       case 9:  // koordinator/ggT_Prozess/setMonitor
       {
         koordinator.monitor.Monitor m = koordinator.monitor.MonitorHelper.read (in);
         this.setMonitor (m);
         out = $rh.createReply();
         break;
       }

       case 10:  // koordinator/ggT_Prozess/exit
       {
         this.exit ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:koordinator/ggT_Prozess:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ggT_Prozess _this() 
  {
    return ggT_ProzessHelper.narrow(
    super._this_object());
  }

  public ggT_Prozess _this(org.omg.CORBA.ORB orb) 
  {
    return ggT_ProzessHelper.narrow(
    super._this_object(orb));
  }


} // class ggT_ProzessPOA
