package sensor;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.TimerTask;

import web_sensor.SensorService;
import web_sensor.WebSensor;

public class DisplayRefresh extends TimerTask {

    boolean running;

    private String sensor_id;
    private Sensor sensor;
    HashMap<String, String[]> sensoren_display_map = new HashMap<String, String[]>();
    ArrayList<String> zombies = new ArrayList<String>();


    public DisplayRefresh(String sensor_id, Sensor sensor, HashMap<String, String[]> sensoren_display_map) {
        this.sensor_id = sensor_id;
        this.sensor = sensor;
        this.sensoren_display_map = sensoren_display_map;
    }


    public void run() {
        
        URL location;
        SensorService service;
        WebSensor sensor;

        while (running) {
            for (String it : sensoren_display_map.keySet()) {
                try {
                    location = new URL(it);
                    service = new SensorService(location);
                    sensor = service.getWebSensorPort();
                    sensor.trigger();
                } catch (MalformedURLException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (Exception e) {
                    zombies.add(it);
                }

            }

            for (String it : sensoren_display_map.keySet()) {

                if (!it.equals(sensor_id) && !this.zombies.contains(it)) {
                    for (String iter : this.zombies) {
                        try {
                            location = new URL(it);
                            service = new SensorService(location);
                            sensor = service.getWebSensorPort();
                        } catch (MalformedURLException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                        sensor.removeSensor(iter, this.sensor.getStringArray(this.sensoren_display_map.get(iter)));
                        System.out.println("entfernt");
                    }
                }
            }

        }
    }
