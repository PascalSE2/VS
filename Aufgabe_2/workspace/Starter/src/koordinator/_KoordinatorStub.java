package koordinator;


/**
* koordinator/_KoordinatorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Koordinator.idl
* Dienstag, 6. Mai 2014 11:00 Uhr MESZ
*/

public class _KoordinatorStub extends org.omg.CORBA.portable.ObjectImpl implements koordinator.Koordinator
{

  public void ggT_ProzessAnmeldung (String name_id, koordinator.ggT_Prozess p)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ggT_ProzessAnmeldung", true);
                $out.write_string (name_id);
                koordinator.ggT_ProzessHelper.write ($out, p);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                ggT_ProzessAnmeldung (name_id, p        );
            } finally {
                _releaseReply ($in);
            }
  } // ggT_ProzessAnmeldung

  public void ggT_ProzessAbmeldung (String name_id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ggT_ProzessAbmeldung", true);
                $out.write_string (name_id);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                ggT_ProzessAbmeldung (name_id        );
            } finally {
                _releaseReply ($in);
            }
  } // ggT_ProzessAbmeldung

  public void starterAnmeldung (String name, koordinator.Starter p)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("starterAnmeldung", true);
                $out.write_string (name);
                koordinator.StarterHelper.write ($out, p);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                starterAnmeldung (name, p        );
            } finally {
                _releaseReply ($in);
            }
  } // starterAnmeldung

  public void starterAbmeldung (String name)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("starterAbmeldung", true);
                $out.write_string (name);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                starterAbmeldung (name        );
            } finally {
                _releaseReply ($in);
            }
  } // starterAbmeldung

  public void meldeTerminierungsStatus (koordinator.Nachricht msg)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("meldeTerminierungsStatus", true);
                koordinator.NachrichtHelper.write ($out, msg);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                meldeTerminierungsStatus (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // meldeTerminierungsStatus

  public void startBerechnung (int min, int max, int min_delay, int max_delay, int terminierungs_periode, int ggt) throws koordinator.KoordinatorPackage.EKoordinatorInUse
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("startBerechnung", true);
                $out.write_long (min);
                $out.write_long (max);
                $out.write_long (min_delay);
                $out.write_long (max_delay);
                $out.write_long (terminierungs_periode);
                $out.write_long (ggt);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:koordinator/Koordinator/EKoordinatorInUse:1.0"))
                    throw koordinator.KoordinatorPackage.EKoordinatorInUseHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                startBerechnung (min, max, min_delay, max_delay, terminierungs_periode, ggt        );
            } finally {
                _releaseReply ($in);
            }
  } // startBerechnung

  public String[] getStarterListe ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getStarterListe", true);
                $in = _invoke ($out);
                String $result[] = koordinator.StarterListeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getStarterListe (        );
            } finally {
                _releaseReply ($in);
            }
  } // getStarterListe

  public void setMonitor (koordinator.monitor.Monitor m)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setMonitor", true);
                koordinator.monitor.MonitorHelper.write ($out, m);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setMonitor (m        );
            } finally {
                _releaseReply ($in);
            }
  } // setMonitor

  public void exit ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exit", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                exit (        );
            } finally {
                _releaseReply ($in);
            }
  } // exit

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:koordinator/Koordinator:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _KoordinatorStub
