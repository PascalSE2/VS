package bank;


/**
* bank/KontoPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from bank.idl
* Donnerstag, 27. März 2014 08:01 Uhr MEZ
*/

public abstract class KontoPOA extends org.omg.PortableServer.Servant
 implements bank.KontoOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_kontostand", new java.lang.Integer (0));
    _methods.put ("_get_kontonr", new java.lang.Integer (1));
    _methods.put ("einzahlen", new java.lang.Integer (2));
    _methods.put ("auszahlen", new java.lang.Integer (3));
    _methods.put ("transfer", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // bank/Konto/_get_kontostand
       {
         double $result = (double)0;
         $result = this.kontostand ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }


  //Kontostand
       case 1:  // bank/Konto/_get_kontonr
       {
         String $result = null;
         $result = this.kontonr ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  //Kontonummer
       case 2:  // bank/Konto/einzahlen
       {
         try {
           double betrag = in.read_double ();
           this.einzahlen (betrag);
           out = $rh.createReply();
         } catch (bank.KontoPackage.EInvalidAmount $ex) {
           out = $rh.createExceptionReply ();
           bank.KontoPackage.EInvalidAmountHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // bank/Konto/auszahlen
       {
         try {
           double betrag = in.read_double ();
           this.auszahlen (betrag);
           out = $rh.createReply();
         } catch (bank.KontoPackage.EInvalidAmount $ex) {
           out = $rh.createExceptionReply ();
           bank.KontoPackage.EInvalidAmountHelper.write (out, $ex);
         } catch (bank.KontoPackage.ENotEnoughMoney $ex) {
           out = $rh.createExceptionReply ();
           bank.KontoPackage.ENotEnoughMoneyHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // bank/Konto/transfer
       {
         try {
           double betrag = in.read_double ();
           bank.Konto toKonto = bank.KontoHelper.read (in);
           this.transfer (betrag, toKonto);
           out = $rh.createReply();
         } catch (bank.KontoPackage.EInvalidAmount $ex) {
           out = $rh.createExceptionReply ();
           bank.KontoPackage.EInvalidAmountHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:bank/Konto:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Konto _this() 
  {
    return KontoHelper.narrow(
    super._this_object());
  }

  public Konto _this(org.omg.CORBA.ORB orb) 
  {
    return KontoHelper.narrow(
    super._this_object(orb));
  }


} // class KontoPOA
